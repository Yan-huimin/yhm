<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>