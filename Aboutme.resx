<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        36endo/ipfUAAAAASUVORK5CYII=
</value>
  </data>
</root>