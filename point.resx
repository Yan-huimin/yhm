<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>